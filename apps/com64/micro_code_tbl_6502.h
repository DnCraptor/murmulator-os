//////////////////////////////////////////////////
//                                              //
// Emu64                                        //
// von Thorsten Kattanek                        //
//                                              //
// #file: micro_code_tbl_6502.h                 //
//                                              //
// Dieser Sourcecode ist Copyright geschützt!   //
// Geistiges Eigentum von Th.Kattanek           //
//                                              //
// Letzte Änderung am 18.05.2014                //
// www.emu64.de                                 //
//                                              //
//////////////////////////////////////////////////

#ifndef MICRO_CODE_TBL_6502_H
#define MICRO_CODE_TBL_6502_H

#define MCTItemSize 8

static const unsigned char MicroCodeTable6502[259][MCTItemSize] =
{
/*0x00*/ {1,2,3,4,5,6,0},           // BRK
/*0x01*/ {7,8,9,10,11,0},           // ORA ($FF,X)
/*0x02*/ {12,0},                    // JAM
/*0x03*/ {7,8,9,10,13,120,15,0},    // SLO ($FF,X)
/*0x04*/ {16,13,0},                 // NOP $FF
/*0x05*/ {16,11,0},                 // ORA $FF
/*0x06*/ {16,13,18,15,0},           // ASL $FF
/*0x07*/ {16,13,120,15,0},          // SLO $FF
/*0x08*/ {19,20,0},                 // PHP
/*0x09*/ {21,0},                    // ORA #$FF
/*0x0A*/ {22,0},                    // ASL A
/*0x0B*/ {138,0},                   // ANC #$FF
/*0x0C*/ {24,25,13,0},              // NOP $FFFF
/*0x0D*/ {24,25,11,0},              // ORA $FFFF
/*0x0E*/ {24,25,13,18,15,0},        // ASL $FFFF
/*0x0F*/ {24,25,13,120,15,0},       // SLO $FFFF
/*0x10*/ {26,34,35,0},              // BPL $FFFF
/*0x11*/ {7,9,36,37,11,0},          // ORA ($FF),Y
/*0x12*/ {12,0},                    // JAM
/*0x13*/ {7,9,36,13,13,120,15,0},   // SLO ($FF),Y
/*0x14*/ {16,52,13,0},              // NOP $FF,X
/*0x15*/ {16,52,11,0},              // ORA $FF,X
/*0x16*/ {16,52,13,18,15,0},		// ASL $FF,X
/*0x17*/ {16,52,13,120,15,0},		// SLO $FF,X
/*0x18*/ {69,0},                    // CLC
/*0x19*/ {24,54,37,11,0},           // ORA $FFFF,Y
/*0x1A*/ {19,0},                    // NOP
/*0x1B*/ {24,54,13,13,120,15,0},	// SLO $FFFF,Y
/*0x1C*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0x1D*/ {24,53,37,11,0},           // ORA $FFFF,X
/*0x1E*/ {24,53,13,13,18,15,0},		// ASL $FFFF,X
/*0x1F*/ {24,53,13,13,120,15,0},	// SLO $FFFF,X
/*0x20*/ {24,59,60,61,38,0},		// JSR $FFFF
/*0x21*/ {7,8,9,10,67,0},           // AND ($FF,X)
/*0x22*/ {12,0},                    // JAM
/*0x23*/ {7,8,9,10,13,121,15,0},	// RLA ($FF,X)
/*0x24*/ {16,76,0},                 // BIT $FF
/*0x25*/ {16,67,0},                 // AND $FF
/*0x26*/ {16,13,111,15,0},          // ROL $FF
/*0x27*/ {16,13,121,15,0},          // RLA $FF
/*0x28*/ {19,48,49,0},              // PLP
/*0x29*/ {66,0},                    // AND #$FF
/*0x2A*/ {110,0},                   // ROL A
/*0x2B*/ {138,0},                   // ANC #$FF
/*0x2C*/ {24,25,76,0},              // BIT $FFFF
/*0x2D*/ {24,25,67,0},              // AND $FFFF
/*0x2E*/ {24,25,13,111,15,0},		// ROL $FFFF
/*0x2F*/ {24,25,13,121,15,0},		// RLA $FFFF
/*0x30*/ {27,34,35,0},              // BMI $FFFF
/*0x31*/ {7,9,36,68,67,0},          // AND ($FF),Y
/*0x32*/ {12,0},                    // JAM
/*0x33*/ {7,9,36,13,13,121,15,0},	// RLA ($FF),Y
/*0x34*/ {16,52,13,0},              // NOP $FF,X
/*0x35*/ {16,52,67,0},              // AND $FF,X
/*0x36*/ {16,52,13,111,15,0},		// ROL $FF,X
/*0x37*/ {16,52,13,121,15,0},		// RLA $FF,X
/*0x38*/ {73,0},                    // SEC
/*0x39*/ {24,54,68,67,0},           // AND $FFFF,Y
/*0x3A*/ {19,0},                    // NOP
/*0x3B*/ {24,54,13,13,121,15,0},	// RLA $FFFF,Y
/*0x3C*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0x3D*/ {24,53,68,67,0},           // AND $FFFF,X
/*0x3E*/ {24,53,13,13,111,15,0},	// ROL $FFFF,X
/*0x3F*/ {24,53,13,13,121,15,0},	// RLA $FFFF,X
/*0x40*/ {13,62,48,63,64,0},        // RTI
/*0x41*/ {7,8,9,10,106,0},          // EOR ($FF,X)
/*0x42*/ {12,0},                    // JAM
/*0x43*/ {7,8,9,10,13,122,15,0},	// SRE ($FF,X)
/*0x44*/ {16,13,0},                 // NOP $FF
/*0x45*/ {16,106,0},                // EOR $FF
/*0x46*/ {16,13,109,15,0},          // LSR $FF
/*0x47*/ {16,13,122,15,0},          // SRE $FF
/*0x48*/ {19,45,0},                 // PHA
/*0x49*/ {105,0},                   // EOR #$FF
/*0x4A*/ {108,0},                   // LSR A
/*0x4B*/ {129,0},                   // ASR #$FF
/*0x4C*/ {24,38,0},                 // JMP $FFFF
/*0x4D*/ {24,25,106,0},             // EOR $FFFF
/*0x4E*/ {24,25,13,109,15,0},		// LSR $FFFF
/*0x4F*/ {24,25,13,122,15,0},		// SRE $FFFF
/*0x50*/ {28,34,35,0},              // BVC $FFFF
/*0x51*/ {7,9,36,107,106,0},		// EOR ($FF),Y
/*0x52*/ {12,0},                    // JAM
/*0x53*/ {7,9,36,13,13,122,15,0},	// SRE ($FF),Y
/*0x54*/ {16,52,13,0},              // NOP $FF,X
/*0x55*/ {16,52,106,0},             // EOR $FF,X
/*0x56*/ {16,52,13,109,15,0},		// LSR $FF,X
/*0x57*/ {16,52,13,122,15,0},		// SRE $FF,X
/*0x58*/ {71,0},                    // CLI
/*0x59*/ {24,54,107,106,0},         // EOR $FFFF,Y
/*0x5A*/ {19,0},                    // NOP
/*0x5B*/ {24,54,13,13,122,15,0},	// SRE $FFFF,Y
/*0x5C*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0x5D*/ {24,53,107,106,0},         // EOR $FFFF,X
/*0x5E*/ {24,53,13,13,109,15,0},	// LSR $FFFF,X
/*0x5F*/ {24,53,13,13,122,15,0},	// SRE $FFFF,X
/*0x60*/ {19,62,63,64,65,0},		// RTS
/*0x61*/ {7,8,9,10,51,0},           // ADC ($FF,X)
/*0x62*/ {12,0},                    // JAM
/*0x63*/ {7,8,9,10,13,123,15,0},	// RRA ($FF,X)
/*0x64*/ {16,13,0},                 // NOP $FF
/*0x65*/ {16,51,0},                 // ADC $FF
/*0x66*/ {16,13,113,15,0},          // ROR $FF
/*0x67*/ {16,13,123,15,0},          // RRA $FF
/*0x68*/ {19,46,47,0},              // PLA
/*0x69*/ {50,0},                    // ADC #$FF
/*0x6A*/ {112,0},                   // ROR A
/*0x6B*/ {130,0},                   // ARR #$FF
/*0x6C*/ {24,25,94,95,0},           // JMP ($FFFF)
/*0x6D*/ {24,25,51,0},              // ADC $FFFF
/*0x6E*/ {24,25,13,113,15,0},		// ROR $FFFF
/*0x6F*/ {24,25,13,123,15,0},		// RRA $FFFF
/*0x70*/ {29,34,35,0},              // BVS $FFFF
/*0x71*/ {7,9,36,55,51,0},          // ADC ($FF),Y
/*0x72*/ {12,0},                    // JAM
/*0x73*/ {7,9,36,13,13,123,15,0},	// RRA ($FF),Y
/*0x74*/ {16,52,13,0},              // NOP $FF,X
/*0x75*/ {16,52,51,0},              // ADC $FF,X
/*0x76*/ {16,52,13,113,15,0},		// ROR $FF,X
/*0x77*/ {16,52,13,123,15,0},		// RRA $FF,X
/*0x78*/ {75,0},                    // SEI
/*0x79*/ {24,54,55,51,0},           // ADC $FFFF,Y
/*0x7A*/ {19,0},                    // NOP
/*0x7B*/ {24,54,13,13,123,15,0},	// RRA $FFFF,Y
/*0x7C*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0x7D*/ {24,53,55,51,0},           // ADC $FFFF,X
/*0x7E*/ {24,53,13,13,113,15,0},	// ROR $FFFF,X
/*0x7F*/ {24,53,13,13,123,15,0},	// RRA $FFFF,X
/*0x80*/ {65,0},                    // NOP #$FF
/*0x81*/ {7,8,9,10,77,0},           // STA ($FF,X)
/*0x82*/ {65,0},                    // NOP #$FF
/*0x83*/ {7,8,9,10,128,0},          // SAX ($FF,X)
/*0x84*/ {16,79,0},                 // STY $FF
/*0x85*/ {16,77,0},                 // STA $FF
/*0x86*/ {16,78,0},                 // STX $FF
/*0x87*/ {16,128,0},                // SAX $FF
/*0x88*/ {92,0},                    // DEY
/*0x89*/ {65,0},                    // NOP #$FF
/*0x8A*/ {42,0},                    // TXA
/*0x8B*/ {131,0},                   // ANE #$FF
/*0x8C*/ {24,25,79,0},              // STY $FFFF
/*0x8D*/ {24,25,77,0},              // STA $FFFF
/*0x8E*/ {24,25,78,0},              // STX $FFFF
/*0x8F*/ {24,25,128,0},             // SAX $FFFF
/*0x90*/ {30,34,35,0},              // BCC $FFFF
/*0x91*/ {7,9,36,13,77,0},          // STA ($FF),Y
/*0x92*/ {12,0},                    // JAM
/*0x93*/ {7,9,36,13,136,0},         // SHA ($FF),Y
/*0x94*/ {16,52,79,0},              // STY $FF,X
/*0x95*/ {16,52,77,0},              // STA $FF,X
/*0x96*/ {16,17,78,0},              // STX $FF,Y
/*0x97*/ {16,17,128,0},             // SAX $FF,Y
/*0x98*/ {44,0},                    // TYA
/*0x99*/ {24,54,13,77,0},           // STA $FFFF,Y
/*0x9A*/ {43,0},                    // TXS
/*0x9B*/ {24,54,13,137,0},          // SHS $FFFF,Y
/*0x9C*/ {24,53,13,134,0},          // SHY $FFFF,X
/*0x9D*/ {24,53,13,77,0},           // STA $FFFF,X
/*0x9E*/ {24,54,13,135,0},          // SHX $FFFF,Y
/*0x9F*/ {24,54,13,136,0},          // SHA $FFFF,Y
/*0xA0*/ {86,0},                    // LDY #$FF
/*0xA1*/ {7,8,9,10,81,0},           // LDA ($FF,X)
/*0xA2*/ {83,0},                    // LDX #$FF
/*0xA3*/ {7,8,9,10,126,0},          // LAX ($FF,X)
/*0xA4*/ {16,87,0},                 // LDY $FF
/*0xA5*/ {16,81,0},                 // LDA $FF
/*0xA6*/ {16,84,0},                 // LDX $FF
/*0xA7*/ {16,126,0},                // LAX $FF
/*0xA8*/ {40,0},                    // TAY
/*0xA9*/ {80,0},                    // LDA #$FF
/*0xAA*/ {39,0},                    // TAX
/*0xAB*/ {132,0},                   // LXA #$FF
/*0xAC*/ {24,25,87,0},              // LDY $FFFF
/*0xAD*/ {24,25,81,0},              // LDA $FFFF
/*0xAE*/ {24,25,84,0},              // LDX $FFFF
/*0xAF*/ {24,25,126,0},             // LAX $FFFF
/*0xB0*/ {31,34,35,0},              // BCS $FFFF
/*0xB1*/ {7,9,36,82,81,0},          // LDA ($FF),Y
/*0xB2*/ {12,0},                    // JAM
/*0xB3*/ {7,9,36,127,126,0},		// LAX ($FF),Y
/*0xB4*/ {16,52,87,0},              // LDY $FF,X
/*0xB5*/ {16,52,81,0},              // LDA $FF,X
/*0xB6*/ {16,17,84,0},              // LDX $FF,Y
/*0xB7*/ {16,17,126,0},             // LAX $FF,Y
/*0xB8*/ {72,0},                    // CLV
/*0xB9*/ {24,54,82,81,0},           // LDA $FFFF,Y
/*0xBA*/ {41,0},                    // TSX
/*0xBB*/ {24,54,140,139,0},         // LAE $FFFF,Y
/*0xBC*/ {24,53,88,87,0},           // LDA $FFFF,X
/*0xBD*/ {24,53,82,81,0},           // LDA $FFFF,X
/*0xBE*/ {24,54,85,84,0},           // LDX $FFFF,Y
/*0xBF*/ {24,54,127,126,0},         // LAX $FFFF,Y
/*0xC0*/ {103,0},                   // CPY #$FF
/*0xC1*/ {7,8,9,10,99,0},           // CMP ($FF,X)
/*0xC2*/ {65,0},                    // NOP #$FF
/*0xC3*/ {7,8,9,10,13,124,15,0},	// DCP ($FF,X)
/*0xC4*/ {16,104,0},                // CPY $FF
/*0xC5*/ {16,99,0},                 // CMP $FF
/*0xC6*/ {16,13,115,15,0},          // DEC $FF
/*0xC7*/ {16,13,124,15,0},          // DCP $FF
/*0xC8*/ {90,0},                    // INY
/*0xC9*/ {98,0},                    // CMP #$FF
/*0xCA*/ {91,0},                    // DEX
/*0xCB*/ {133,0},                   // SBX #$FF
/*0xCC*/ {24,25,104,0},             // CPY $FFFF
/*0xCD*/ {24,25,99,0},              // CMP $FFFF
/*0xCE*/ {24,25,13,115,15,0},		// DEC $FFFF
/*0xCF*/ {24,25,13,124,15,0},		// DCP $FFFF
/*0xD0*/ {32,34,35,0},              // BNE $FFFF
/*0xD1*/ {7,9,36,100,99,0},         // CMP ($FF),Y
/*0xD2*/ {12,0},                    // JAM
/*0xD3*/ {7,9,36,13,13,124,15,0},	// DCP ($FF),Y
/*0xD4*/ {16,52,13,0},              // NOP $FF,X
/*0xD5*/ {16,52,99,0},              // CMP $FF,X
/*0xD6*/ {16,52,13,115,15,0},		// DEC $FF,X
/*0xD7*/ {16,52,13,124,15,0},		// DCP $FF,X
/*0xD8*/ {70,0},                    // CLD
/*0xD9*/ {24,54,100,99,0},          // CMP $FFFF,Y
/*0xDA*/ {19,0},                    // NOP
/*0xDB*/ {24,54,13,13,124,15,0},	// DCP $FFFF,Y
/*0xDC*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0xDD*/ {24,53,100,99,0},          // CMP $FFFF,X
/*0xDE*/ {24,53,13,13,115,15,0},	// DEC $FFFF,X
/*0xDF*/ {24,53,13,13,124,15,0},	// DCP $FFFF,X
/*0xE0*/ {101,0},                   // CPX #$FF
/*0xE1*/ {7,8,9,10,57,0},           // SBC ($FF,X)
/*0xE2*/ {65,0},                    // NOP #$FF
/*0xE3*/ {7,8,9,10,13,125,15,0},	// ISB ($FF,X)
/*0xE4*/ {16,102,0},                // CPX $FF
/*0xE5*/ {16,57,0},                 // SBC $FF
/*0xE6*/ {16,13,114,15,0},          // INC $FF
/*0xE7*/ {16,13,125,15,0},          // ISB $FF
/*0xE8*/ {89,0},                    // INX
/*0xE9*/ {56,0},                    // SBC #$FF
/*0xEA*/ {19,0},                    // NOP
/*0xEB*/ {56,0},                    // SBC #$FF (Illegal)
/*0xEC*/ {24,25,102,0},             // CPX $FFFF
/*0xED*/ {24,25,57,0},              // SBC $FFFF
/*0xEE*/ {24,25,13,114,15,0},		// INC $FFFF
/*0xEF*/ {24,25,13,125,15,0},		// ISB $FFFF
/*0xF0*/ {33,34,35,0},              // BEQ $FFFF
/*0xF1*/ {7,9,36,58,57,0},          // SBC ($FF),Y
/*0xF2*/ {12,0},                    // JAM
/*0xF3*/ {7,9,36,13,13,125,15,0},	// ISB ($FF),Y
/*0xF4*/ {16,52,13,0},              // NOP $FF,X
/*0xF5*/ {16,52,57,0},              // SBC $FF,X
/*0xF6*/ {16,52,13,114,15,0},		// INC $FF,X
/*0xF7*/ {16,52,13,125,15,0},		// ISB $FF,X
/*0xF8*/ {74,0},                    // SED
/*0xF9*/ {24,54,58,57,0},           // SBC $FFFF,Y
/*0xFA*/ {19,0},                    // NOP
/*0xFB*/ {24,54,13,13,125,15,0},	// ISB $FFFF,Y
/*0xFC*/ {24,53,119,13,0},          // NOP $FFFF,X
/*0xFD*/ {24,53,58,57,0},           // SBC $FFFF,X
/*0xFE*/ {24,53,13,13,114,15,0},	// INC $FFFF,X
/*0xFF*/ {24,53,13,13,125,15,0},	// ISB $FFFF,X

///////////////////////////////////////////////
///////////////////////////////////////////////

/*0x100*/ {96,97,0},                // RESET
/*0x101*/ {13,60,61,116,5,6,0},		// IRQ
/*0x102*/ {13,60,61,116,117,118,0}	// NMI
};

#endif // MICRO_CODE_TBL_6502_H
